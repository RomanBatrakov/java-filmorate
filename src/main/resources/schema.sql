CREATE TABLE IF NOT EXISTS users (
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR NOT NULL,
    login    INTEGER NOT NULL,
    name     VARCHAR,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INTEGER,
    rating_id    INTEGER
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS rating (
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      VARCHAR NOT NULL
);

ALTER TABLE films
    ADD CONSTRAINT films_rating_fk FOREIGN KEY (rating_id) REFERENCES rating;

CREATE TABLE IF NOT EXISTS film_genres (
    film_id INTEGER,
    genre_id INTEGER,
    CONSTRAINT film_genres_id PRIMARY KEY (film_id, genre_id),
    CONSTRAINT film_genres_fk FOREIGN KEY (film_id) REFERENCES films,
    CONSTRAINT genres_films_fk FOREIGN KEY (genre_id) REFERENCES genres
);

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER,
    user_id INTEGER,
    CONSTRAINT likes_id PRIMARY KEY (film_id, user_id),
    CONSTRAINT film_user_fk FOREIGN KEY (film_id) REFERENCES films,
    CONSTRAINT user_film_fk FOREIGN KEY (user_id) REFERENCES users
);

CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER,
    friend_id INTEGER,
    CONSTRAINT friends_id PRIMARY KEY (user_id, friend_id),
    CONSTRAINT user_friend_fk FOREIGN KEY (user_id) REFERENCES users,
    CONSTRAINT friend_user_fk FOREIGN KEY (user_id) REFERENCES users
);